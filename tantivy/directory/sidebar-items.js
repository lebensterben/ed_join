initSidebarItems({"mod":[["error","Errors specific to the directory module."]],"static":[["INDEX_WRITER_LOCK","Only one process should be able to write tantivy's index at a time. This lock file, when present, is in charge of preventing other processes to open an IndexWriter."],["META_LOCK","The meta lock file is here to protect the segment files being opened by `IndexReader::reload()` from being garbage collected. It makes it possible for another process to safely consume our index in-writing. Ideally, we may have prefered `RWLock` semantics here, but it is difficult to achieve on Windows."]],"struct":[["DirectoryLock","The `DirectoryLock` is an object that represents a file lock. See  `LockType`"],["Lock","A directory lock."],["ManagedDirectory","Wrapper of directories that keeps track of files created by Tantivy."],["MmapDirectory","Directory storing data in files, read via mmap."],["RAMDirectory","A Directory storing everything in anonymous memory."],["ReadOnlySource","Read object that represents files in tantivy."],["WatchHandle","Controls how long a directory should watch for a file change."]],"trait":[["Directory","Write-once read many (WORM) abstraction for where tantivy's data should be stored."],["DirectoryClone","DirectoryClone"]],"type":[["WatchCallback","Type alias for callbacks registered when watching files of a `Directory`."],["WritePtr","Write object for Directory."]]});